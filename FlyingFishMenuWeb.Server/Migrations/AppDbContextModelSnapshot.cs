// <auto-generated />
using System;
using FlyingFishMenuWeb.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FlyingFishMenuWeb.Server.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FlyingFish.server.Model.ItemCategory", b =>
                {
                    b.Property<string?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("Category_Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ItemCategories");
                });

            modelBuilder.Entity("FlyingFish.server.Model.MenuItem", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string?>("Category_Id")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Category_Id");

                    b.ToTable("MenuItems");
                });

            modelBuilder.Entity("FlyingFish.server.Model.MenuItemVariant", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MenuItem_Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(19,4)");

                    b.Property<string>("Variant_Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MenuItem_Id");

                    b.ToTable("MenuItemVariants");
                });

            modelBuilder.Entity("FlyingFish.server.Model.MenuItem", b =>
                {
                    b.HasOne("FlyingFish.server.Model.ItemCategory", "Category")
                        .WithMany("MenuItems")
                        .HasForeignKey("Category_Id");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("FlyingFish.server.Model.MenuItemVariant", b =>
                {
                    b.HasOne("FlyingFish.server.Model.MenuItem", "MenuItem")
                        .WithMany("ItemVariants")
                        .HasForeignKey("MenuItem_Id");

                    b.Navigation("MenuItem");
                });

            modelBuilder.Entity("FlyingFish.server.Model.ItemCategory", b =>
                {
                    b.Navigation("MenuItems");
                });

            modelBuilder.Entity("FlyingFish.server.Model.MenuItem", b =>
                {
                    b.Navigation("ItemVariants");
                });
#pragma warning restore 612, 618
        }
    }
}
