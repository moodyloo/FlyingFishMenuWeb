// <auto-generated />
using System;
using FlyingFishMenuWeb.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FlyingFishMenuWeb.Server.Migrations
{
    [DbContext(typeof(FlyingFishContext))]
    [Migration("20240410171201_Add-isunavailable-column-to-menu-item-variant")]
    partial class Addisunavailablecolumntomenuitemvariant
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.3");

            modelBuilder.Entity("FlyingFishMenuWeb.Server.Model.ItemCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CategoryName")
                        .HasColumnType("TEXT")
                        .HasColumnName("Category_Name");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("IsSetMeal")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ItemCategories");
                });

            modelBuilder.Entity("FlyingFishMenuWeb.Server.Model.MenuItem", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("Category_Id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("IsPopular")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("IsVegetarian")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CategoryId" }, "IX_MenuItems_Category_Id");

                    b.ToTable("MenuItems");
                });

            modelBuilder.Entity("FlyingFishMenuWeb.Server.Model.MenuItemVariant", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("IsUnavailable")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("IsVegetarian")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MenuItemId")
                        .HasColumnType("TEXT")
                        .HasColumnName("MenuItem_Id");

                    b.Property<float?>("Price")
                        .HasColumnType("decimal(19, 4)");

                    b.Property<string>("VariantName")
                        .HasColumnType("TEXT")
                        .HasColumnName("Variant_Name");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "MenuItemId" }, "IX_MenuItemVariants_MenuItem_Id");

                    b.ToTable("MenuItemVariants");
                });

            modelBuilder.Entity("FlyingFishMenuWeb.Server.Model.MenuItem", b =>
                {
                    b.HasOne("FlyingFishMenuWeb.Server.Model.ItemCategory", "Category")
                        .WithMany("MenuItems")
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("FlyingFishMenuWeb.Server.Model.MenuItemVariant", b =>
                {
                    b.HasOne("FlyingFishMenuWeb.Server.Model.MenuItem", "MenuItem")
                        .WithMany("MenuItemVariants")
                        .HasForeignKey("MenuItemId");

                    b.Navigation("MenuItem");
                });

            modelBuilder.Entity("FlyingFishMenuWeb.Server.Model.ItemCategory", b =>
                {
                    b.Navigation("MenuItems");
                });

            modelBuilder.Entity("FlyingFishMenuWeb.Server.Model.MenuItem", b =>
                {
                    b.Navigation("MenuItemVariants");
                });
#pragma warning restore 612, 618
        }
    }
}
